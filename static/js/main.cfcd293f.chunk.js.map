{"version":3,"sources":["containers/SearchPage/actions.js","containers/SearchPage/page.js","containers/MapPage/actions.js","containers/AnalysePage/actions.js","containers/MapPage/page.js","components/modal.js","components/table.js","containers/AnalysePage/crimeTableModal.js","containers/AnalysePage/page.js","containers/App.js","containers/SearchPage/reducer.js","containers/MapPage/reducer.js","containers/AnalysePage/reducer.js","containers/reducers.js","utils.js","containers/SearchPage/saga.js","containers/AnalysePage/saga.js","containers/sagas.js","serviceWorker.js","index.js"],"names":["LOAD_AVAILABILITY_SUCCESS","LOAD_AVAILABILITY_FAILURE","LOAD_CRIME_CATEGORY_REQUEST","LOAD_CRIME_CATEGORY_SUCCESS","LOAD_CRIME_CATEGORY_FAILURE","SEARCH_REQUEST","SEARCH_SUCCESS","SEARCH_FAILURE","searchFailure","message","type","SearchContainer","styled","div","_templateObject","Search","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","changeDate","evt","dates","target","value","split","date","concat","setState","props","onLoadCrimeCategory","changeCategory","crimeCategory","search","preventDefault","onSearch","url","state","minmax","max","toggleModal","showError","forces","prevProps","_this2","prevAvailability","availability","reduce","acc","ele","min","find","_ref","indexOf","_this$state","_this$props$crimeCate","name","react_default","a","createElement","className","htmlFor","id","onChange","required","map","_ref2","key","str","onClick","React","PureComponent","connect","objectSpread","dispatch","param","params","SAVE_LOCATION","SAVE_STREET_ID","EXTRACT_DATA_SUCCESS","EXTRACT_DATA_FAILURE","fillColors","LeafletMap","handleClick","latlng","onSaveLocation","clickCircle","onSaveStreetId","_this$props","locations","Map","center","ref","val","zoom","TileLayer","attribution","Marker","position","lat","lng","Popup","street","count","Circle","fillColor","length","fillOpacity","stroke","radius","data","saveStreetId","ModalDiv","modal_templateObject","Modal","title","show","onClose","children","TableDiv","table_templateObject","Table","Tr","Th","_ref3","Td","_ref4","CrimeTableModal","crimes","modal","list","table_Table","slicedToArray","content","table_Tr","table_Th","table_Td","AnalyseContainer","page_templateObject","AnalysePage","showModal","crimeTable","crimeTableModal","analyse","AppDiv","App_templateObject","App","page","MapPage_page","AnalysePage_page","Component","initialState","streetId","combineReducers","arguments","undefined","action","values","_ele$location","location","latitude","longitude","_ele$location$street","defineProperty","parseFloat","api","police","guardian","checkStatus","_callee","response","error","body","regenerator_default","wrap","_context","prev","next","status","abrupt","Error","json","sent","statusText","t0","stop","parseJSON","request","path","options","axios","get","then","loadAvailability","loadCrimeCategory","saga","put","console","log","_marked","_date","_args2","_context2","Date","toLocaleDateString","_marked2","_context3","select","_marked3","_context4","fork","takeLatest","_marked4","extractData","selectedCrimes","filter","_ref2$location","_ref2$location$street","month","category","_ref3$location","_ref3$location$street","outcome_status","_ref3$outcomes","outcomes","saga_marked","saga_marked2","sagas","all","searchSaga","analyseSaga","sagas_marked","Boolean","window","hostname","match","createSagaMiddleware","store","createStore","reducers","composeWithDevTools","applyMiddleware","run","ReactDOM","render","es","containers_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cfcd293f.chunk.js","sourcesContent":["export const LOAD_AVAILABILITY_SUCCESS = 'containers/SearchPage/actions/LOAD_AVAILABILITY_SUCCESS';\nexport const LOAD_AVAILABILITY_FAILURE = 'containers/SearchPage/actions/LOAD_AVAILABILITY_FAILURE';\n\nexport const LOAD_CRIME_CATEGORY_REQUEST = 'containers/SearchPage/actions/LOAD_CRIME_CATEGORY_REQUEST';\nexport const LOAD_CRIME_CATEGORY_SUCCESS = 'containers/SearchPage/actions/LOAD_CRIME_CATEGORY_SUCCESS';\nexport const LOAD_CRIME_CATEGORY_FAILURE = 'containers/SearchPage/actions/LOAD_CRIME_CATEGORY_FAILURE';\n\nexport const SEARCH_REQUEST = 'containers/SearchPage/actions/SEARCH_REQUEST';\nexport const SEARCH_SUCCESS = 'containers/SearchPage/actions/SEARCH_SUCCESS';\nexport const SEARCH_FAILURE = 'containers/SearchPage/actions/SEARCH_FAILURE';\n\nexport function loadAvailabilitySuccess (data) {\n  return {\n    type: LOAD_AVAILABILITY_SUCCESS,\n    data,\n  }\n}\n\nexport function loadAvailabilityFailure (message) {\n  return {\n    type: LOAD_AVAILABILITY_FAILURE,\n    message,\n  }\n}\n\nexport function loadCrimeCategoryRequest (date) {\n  return {\n    type: LOAD_CRIME_CATEGORY_REQUEST,\n    date,\n  }\n}\n\nexport function loadCrimeCategorySuccess (data) {\n  return {\n    type: LOAD_CRIME_CATEGORY_SUCCESS,\n    data,\n  }\n}\n\nexport function loadCrimeCategoryFailure (message) {\n  return {\n    type: LOAD_CRIME_CATEGORY_FAILURE,\n    message,\n  }\n}\n\nexport function searchRequest (params) {\n  return {\n    type: SEARCH_REQUEST,\n    params,\n  }\n}\n\nexport function searchSuccess (data) {\n  return {\n    type: SEARCH_SUCCESS,\n    data,\n  }\n}\n\nexport function searchFailure (message) {\n  return {\n    type: SEARCH_FAILURE,\n    message,\n  }\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport { connect } from 'react-redux';\n\nimport {\n  loadCrimeCategoryRequest,\n  searchRequest,\n} from './actions';\n\nconst SearchContainer = styled.div`\n    order: 1;\n    margin: 0.5rem;\n    padding: 0.5rem;\n\n    .grid-container {\n      display: grid;\n      grid-template-rows: 2rem 2rem 2rem 2rem;\n      grid-template-columns: 7.5rem auto;\n\n      .grid-item {\n        padding: 0.5rem 1rem;\n        \n        &.submit {\n          grid-column-start: 1;\n          grid-column-end: 3;\n        }\n      }\n    }\n\n    label {\n      font-size: smaller;\n      text-transform: uppercase;\n    }\n\n    button {\n      background-color: black;\n      color: white;\n      padding: 0.3rem 1rem;\n      font-weight: bolder;\n    }\n`;\n\nclass Search extends React.PureComponent {\n  static propTypes = {\n    availability: PropTypes.array,\n    crimeCategory: PropTypes.array,\n    crimes: PropTypes.array,\n    onLoadCrimeCategory: PropTypes.func,\n  };\n\n  constructor() {\n    super();\n\n    this.state = {\n      date: null,\n      minmax: {},\n      forces: [],\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const {\n      availability: prevAvailability,\n    } = prevProps;\n\n    const {\n      availability,\n    } = this.props;\n\n    if (prevAvailability !== availability) {\n      const minmax = availability.reduce((acc, ele) => {\n        return {\n          min: (acc.min && acc.min < ele.date) ? acc.min : ele.date,\n          max: (acc.max && acc.max > ele.date) ? acc.max : ele.date,\n        }\n      }, {});\n\n      const forces = (availability.find(({ date }) => (this.state.date || minmax.max || '').indexOf(date) > -1) || {})['stop-and-search'];\n\n      this.setState({\n        minmax,\n        forces,\n      })\n    }\n  }\n\n  changeDate = (evt) => {\n    const dates = evt.target.value && evt.target.value.split('-');\n\n    if(dates) {\n      const date = `${dates[0]}-${dates[1]}`;\n      this.setState({\n        date,\n      });\n\n      this.props.onLoadCrimeCategory(date);\n    }\n  }\n\n  changeCategory = (evt) => {\n    this.crimeCategory = evt.target.value;\n  }\n\n  search = (evt) => {\n    evt.preventDefault();\n\n    this.props.onSearch({\n      url: this.crimeCategory || 'all-crimes',\n      date: this.state.date || this.state.minmax.max,\n    });\n  }\n\n  toggleModal = () => this.setState({ showError: !this.state.showError })\n\n  render() {\n    const {\n      date,\n      minmax,\n      forces,\n    } = this.state;\n\n    const {\n      crimeCategory = [{\n        url: 'all-crimes',\n        name: 'all crimes'\n      }],\n    } = this.props;\n\n    return (\n      <SearchContainer>\n        <form className=\"grid-container\">\n          <label htmlFor=\"input_date\" className=\"grid-item\">date</label>\n          <input\n            type=\"date\"\n            id=\"input_date\"\n            min={`${minmax.min}-01`}\n            max={`${minmax.max}-31`}\n            value={(date || `${minmax.max}-31`)}\n            onChange={this.changeDate}\n            required\n            className=\"grid-item\"\n          />\n          <label htmlFor=\"select_category\" className=\"grid-item\">category</label>\n          <select id=\"select_category\" onChange={this.changeCategory} className=\"grid-item\">\n          {\n            crimeCategory && crimeCategory.map(({ url, name }) =>\n              <option\n                key={url}\n                value={url}\n              >\n                {name}\n              </option>\n            )\n          }\n          </select>\n          <label htmlFor=\"select_force\" className=\"grid-item\">force</label>\n          <select id=\"select_force\" className=\"grid-item\">\n            {\n              forces && forces.map((str) =>\n                <option\n                  key={str}\n                  value={str}\n                >\n                  {str}\n                </option>)\n            }\n          </select>\n          <button onClick={this.search} className=\"grid-item submit\">SEARCH</button>\n        </form>\n      </SearchContainer>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    ...state.search,\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onLoadCrimeCategory: () => dispatch(loadCrimeCategoryRequest()),\n    onSearch: (param) => dispatch(searchRequest(param)),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Search);","export const SAVE_LOCATION = 'containers/MapPage/actions/SAVE_LOCATION';\n\nexport function saveLocation (data) {\n  return {\n    type: SAVE_LOCATION,\n    data,\n  }\n}","export const SAVE_STREET_ID = 'containers/AnalysePage/SAVE_STREET_ID';\n\nexport const EXTRACT_DATA_SUCCESS = 'containers/AnalysePage/EXTRACT_DATA_SUCCESS';\nexport const EXTRACT_DATA_FAILURE = 'containers/AnalysePage/EXTRACT_DATA_FAILURE';\n\nexport function saveStreetId(id) {\n  return {\n    type: SAVE_STREET_ID,\n    id,\n  }\n}\n\nexport function extractDataSuccess(data) {\n  return {\n    type: EXTRACT_DATA_SUCCESS,\n    data,\n  }\n}\n\nexport function extractDataFailure(message) {\n  return {\n    type: EXTRACT_DATA_FAILURE,\n    message,\n  }\n}","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport {\n  Map, TileLayer,\n  Marker, Popup,\n  Circle,\n} from 'react-leaflet';\n\nimport {\n  saveLocation,\n} from './actions';\n\nimport { saveStreetId } from '../AnalysePage/actions';\n\nconst attribution = \"&amp;copy <a href=&quot;http://osm.org/copyright&quot;>OpenStreetMap</a> contributors\";\nconst url = \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\";\n\nconst fillColors = ['palevioletred', 'indianred', 'mediumvioletred', 'darkred', 'orangered', 'red'];\n\nclass LeafletMap extends React.PureComponent {\n  static propTypes = {\n    latlng: PropTypes.shape({\n      lat: PropTypes.number,\n      lng: PropTypes.number,\n    }),\n    locations: PropTypes.array,\n    onSaveLocation: PropTypes.func,\n  }\n\n  handleClick = (evt) => {\n    const { latlng } = evt;\n    this.props.onSaveLocation(latlng);\n  }\n\n  clickCircle = (id) => () => {\n    // evt.preventDefault();\n    this.props.onSaveStreetId(id);\n  }\n\n  render() {\n    const {\n      latlng,\n      locations,\n    } = this.props;\n\n    return (\n      <Map\n        center={latlng}\n        ref={(val) => { this.map = val; }}\n        zoom={13}\n        onClick={this.handleClick}\n      >\n        <TileLayer\n          attribution={attribution}\n          url={url}\n        />\n        { latlng &&\n        <Marker position={[latlng.lat, latlng.lng]}>\n          <Popup>\n            {`You clicked here!!\n            Latitude: ${latlng.lat}\n            Longitude: ${latlng.lng}`}\n          </Popup>\n        </Marker> }\n        {\n          locations && locations.map(({latlng, street, count}) => \n          <Circle\n            fillColor={count >= fillColors.length ? fillColors[fillColors.length - 1] : fillColors[count - 1]}\n            fillOpacity={1.0}\n            stroke={false}\n            radius={count * 25}\n            center={latlng}\n            key={latlng}\n            onClick={this.clickCircle(street.id)}\n          >\n            <Popup>\n            {`Street Id: ${street.id}\n            Street Name: ${street.name}\n            Crime Count: ${count}`}\n            </Popup>\n          </Circle>)\n        }\n      </Map>\n    );\n  }\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    ...state.map,\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onSaveLocation: (latlng) => dispatch(saveLocation(latlng)),\n    onSaveStreetId: (id) => dispatch(saveStreetId(id)),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LeafletMap);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst ModalDiv = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(0, 0, 0, 0.6);\n\n  .modal-title {\n    height: 3rem;\n    background-color: black;\n    color: white;\n    vertical-align: middle;\n    line-height: 3rem;\n    text-align: center;\n  }\n\n  .modal-main {\n    position: fixed;\n    background: white;\n    width: 100%;\n    height: calc(100% - 6rem);\n    overflow: auto;\n    top: 3rem;\n    left: 50%;\n    transform: translateX(-50%);\n  }\n\n  .modal-footer {\n    position: fixed;\n    top: calc(100% - 3rem);\n    height: 3rem;\n    background-color: white;\n    width: 100%;\n    line-height: 3rem;\n    vertical-align: middle;\n    text-align: center;\n    border-top: 1px solid black;\n    box-sizing: border-box;\n\n    .close {\n      background-color: black;\n      color: white;\n      font-weight: bolder;\n      padding: 0.5rem 1rem;\n    }\n  }\n`;\n\nconst Modal = ({ title, show, onClose, children }) => (\n  <ModalDiv className={`display-${show ? 'block' : 'none'}`}>\n    <div className=\"modal-title\">{ title }</div>\n    <div className=\"modal-main\">\n      { children }\n    </div>\n    <div className=\"modal-footer\">\n      <button className=\"close\" onClick={onClose}>Close</button>\n    </div>\n  </ModalDiv>\n);\n\nModal.propTypes = {\n  title: PropTypes.string,\n  show: PropTypes.bool,\n  onClose: PropTypes.func,\n  children: PropTypes.any,\n};\n\nexport default Modal;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst TableDiv = styled.div`\n  margin: 0.5rem auto;\n  display: table;\n\n  box-shadow: 3px 3px 1px 1px;\n  border-radius: 0.5rem;\n  padding: 0.5rem 1rem;\n\n  .tr {\n    display: table-row;\n  }\n\n  .th {\n    display: table-cell;\n    font-weight: 600;\n  }\n\n  .td {\n    display: table-cell;\n  }\n`;\n\nconst Table = ({ children }) => (<TableDiv>{ children }</TableDiv>);\nTable.propTypes = {\n  children: PropTypes.any,\n};\n\nconst Tr = ({ children }) => (<div className=\"tr\">{ children }</div>);\nTr.propTypes = {\n  children: PropTypes.any,\n};\n\nconst Th = ({ children }) => (<div className=\"th\">{ children }</div>);\nTh.propTypes = {\n  children: PropTypes.any,\n};\n\nconst Td = ({ children }) => (<div className=\"td\">{ children }</div>);\nTd.propTypes = {\n  children: PropTypes.any,\n};\n\nexport {\n  Table,\n  Tr, Th, Td,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  Modal,\n  Table, Tr, Th, Td,\n} from '../../components';\n\nconst CrimeTableModal = ({ show, onClose, title, crimes }) => (\n  <Modal\n    show={show}\n    onClose={onClose}\n    title={title}\n  >\n    {\n      crimes && crimes.map(({id, list}) => (<Table key={id}>\n          {\n            list.map(([ title, content ]) => <Tr key={title}>\n              <Th>{ title }</Th>\n              <Td>{ content }</Td>\n            </Tr>)\n          }\n          </Table>\n        ))\n    }\n  </Modal>\n);\n\nCrimeTableModal.propTypes = {\n  show: PropTypes.bool,\n  onClose: PropTypes.func,\n  title: PropTypes.string,\n  crimes: PropTypes.array,\n}\n\nexport default CrimeTableModal;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport styled from 'styled-components';\n\nimport CrimeTableModal from './crimeTableModal';\n\nconst AnalyseContainer = styled.div`\n  .tr {\n    line-height: 2rem;\n\n    .th {\n      font-size: smaller;\n    }\n\n    .td {\n      padding: 0 0.5rem;\n    }\n  }\n`;\n\nclass AnalysePage extends React.PureComponent {\n  static propTypes = {\n    streetId: PropTypes.number,\n    crimes: PropTypes.array,\n  };\n\n  constructor(){\n    super();\n\n    this.state = {\n      showModal: false,\n    }\n  }\n\n  toggleModal = () => this.setState({ showModal: !this.state.showModal })\n\n  render(){\n    const { crimeTable } = this.props;\n\n    return (<AnalyseContainer>\n      { crimeTable && crimeTable.length > 0 &&\n      <button onClick={this.toggleModal}>Crime List</button> }\n      <button>Guardian News</button>\n      <CrimeTableModal\n        show={this.state.showModal}\n        onClose={this.toggleModal}\n        title=\"The list of crimes\"\n        crimes={crimeTable}\n      />\n    </AnalyseContainer>);\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    ...state.analyse,\n  }\n}\n\nexport default connect(mapStateToProps)(AnalysePage);","import React, { Component } from 'react';\nimport styled from 'styled-components';\n\nimport Search from './SearchPage/page';\nimport LeafletMap from './MapPage/page';\nimport Analyse from './AnalysePage/page';\n\nconst AppDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  header {\n    order: 0;\n    background: darkslateblue;\n    color: yellow;\n    line-height: 2rem;\n    height: 4rem;\n    vertical-align: middle;\n    padding: 0;\n    margin: 0;\n    text-align: center;\n    position: relative;\n\n    .title {\n      text-align: center;\n      font-size: larger;\n      font-weight: bolder;\n    }\n\n    .email {\n      text-align: right;\n      padding: 0 1rem;\n      font-size: small;\n    }\n  }\n\n  aside {\n    order: 1;\n  }\n\n  .map {\n    order: 2;\n    height: 32.5rem;\n    z-index: 0;\n\n    .leaflet-container {\n      height: 100%;\n      margin: 0.5rem;\n      border-radius: 1.5rem;\n    }\n  }\n\n  .analyse {\n    order: 3;\n    height: 50rem;\n    padding: 1rem;\n    overflow: auto;\n  }\n`;\n\nclass App extends Component {\n  render() {\n    return (\n      <AppDiv>\n        <header>\n          <div className=\"title\">\n            CRIME MAP\n          </div>\n          <div className=\"email\">\n            <span className=\"smaller\">Contact me: melancholy14@hotmail.com</span>\n          </div>\n        </header>\n        <aside>\n          <Search />\n        </aside>\n        <main className=\"map\">\n          <LeafletMap />\n        </main>\n        <main className=\"analyse\">\n          <Analyse />\n        </main>\n      </AppDiv>\n    );\n  }\n}\n\nexport default App;\n","import {\n  LOAD_AVAILABILITY_SUCCESS,\n  LOAD_AVAILABILITY_FAILURE,\n  LOAD_CRIME_CATEGORY_SUCCESS,\n  LOAD_CRIME_CATEGORY_FAILURE,\n  SEARCH_SUCCESS,\n  SEARCH_FAILURE,\n} from './actions';\n\nconst initialState = {\n  availability: [],\n  crimeCategory: [],\n  message: null,\n};\n\nexport default function searchReducer(state = initialState, action) {\n  switch(action.type) {\n    case LOAD_AVAILABILITY_SUCCESS:\n      return {\n        ...state,\n        availability: action.data,\n      };\n    case LOAD_CRIME_CATEGORY_SUCCESS:\n      return {\n        ...state,\n        crimeCategory: action.data,\n      };\n    case SEARCH_SUCCESS:\n      return {\n        ...state,\n        crimes: action.data,\n      };\n    case LOAD_AVAILABILITY_FAILURE:\n    case LOAD_CRIME_CATEGORY_FAILURE:\n    case SEARCH_FAILURE:\n      return {\n        ...state,\n        message: action.message,\n      };\n    default:\n      return state;\n  }\n}","import {\n  SAVE_LOCATION,\n} from './actions';\n\nimport {\n  SEARCH_SUCCESS,\n} from '../SearchPage/actions';\n\nconst initialState = {\n  latlng: {\n    lat: 51.505,\n    lng: -0.09,\n  },\n};\n\nexport default function mapReducer(state = initialState, action){\n  switch(action.type) {\n    case SAVE_LOCATION:\n      return {\n        ...state,\n        latlng: action.data,\n      };\n    case SEARCH_SUCCESS:\n      return {\n        ...state, \n        locations: Object.values(action.data.reduce((acc, ele) => {\n          const {\n            location: {\n              latitude,\n              longitude,\n              street = {},\n            } = {},\n          } = ele;\n\n          if (!acc[street.id]) {\n            return {\n              ...acc,\n              [street.id]: {\n                street,\n                count: 1,\n                latlng: [parseFloat(latitude), parseFloat(longitude)],\n              },\n            };\n          } else {\n            return {\n              ...acc,\n              [street.id]: {\n                ...acc[street.id],\n                count: acc[street.id].count + 1,\n              },\n            };\n          }\n        }, {})),\n      };\n    default:\n      return state;\n  }\n}","import {\n  SAVE_STREET_ID,\n  EXTRACT_DATA_SUCCESS,\n  EXTRACT_DATA_FAILURE,\n} from './actions';\n\nconst initialState = {\n  streetId: 0,\n};\n\nexport default function analyseReducer(state = initialState, action){\n  switch(action.type){\n    case SAVE_STREET_ID:\n      return {\n        ...state,\n        streetId: action.id,\n      };\n    case EXTRACT_DATA_SUCCESS:\n      return {\n        ...state,\n        ...action.data,\n      };\n    case EXTRACT_DATA_FAILURE:\n      return {\n        ...state,\n        message: action.message,\n      };\n    default:\n      return state;\n  }\n};","import { combineReducers } from 'redux';\n\nimport searchReducer from './SearchPage/reducer';\nimport mapReducer from './MapPage/reducer';\nimport analyseReducer from './AnalysePage/reducer';\n\nexport default combineReducers({\n  map: mapReducer,\n  search: searchReducer,\n  analyse: analyseReducer,\n});","import axios from 'axios';\n\nexport const api = {\n  police: 'https://data.police.uk/api',\n  guardian: 'https://content.guardianapis.com/search',\n};\n\nasync function checkStatus(response) {\n  if (response.status >= 200 && response.status < 300) {\n    return response;\n  } else {\n    const error = new Error();\n    error.response = response;\n\n    try {\n      const body = await response.json();\n      error.body = body;\n      error.message = body.message || response.statusText;\n\n      throw error;\n    } catch (err) {\n      throw err;\n    }\n  }\n}\n\nfunction parseJSON(response){\n  if(response.status === 204 || response.status === 205){\n    return null;\n  }\n\n  return response;\n}\n\nexport function request(path, options) {\n  return axios.get(path, options)\n    .then(checkStatus)\n    .then(parseJSON);\n}","import { fork, put, takeLatest, select } from 'redux-saga/effects';\nimport { api, request } from '../../utils';\n\nimport {\n  LOAD_CRIME_CATEGORY_REQUEST,\n  SEARCH_REQUEST,\n  loadAvailabilitySuccess,\n  loadAvailabilityFailure,\n  loadCrimeCategorySuccess,\n  loadCrimeCategoryFailure,\n  searchSuccess,\n  searchFailure,\n} from './actions';\n\nfunction* loadAvailability() {\n  try {\n    const response = yield request(`${api.police}/crimes-street-dates`);\n\n    yield put(loadAvailabilitySuccess(response.data));\n  } catch(err) { \n    console.log(err);\n    yield put(loadAvailabilityFailure(err.message));\n  }\n}\n\nfunction* loadCrimeCategory({ date: _date } = {}) {\n  try {\n    const date = _date || (new Date()).toLocaleDateString();\n\n    const response = yield request(`${api.police}/crime-categories?date=${date}`);\n\n    yield put(loadCrimeCategorySuccess(response.data));\n  } catch(err) { \n    console.log(err);\n    yield put(loadCrimeCategoryFailure(err.message));\n  }\n}\n\nfunction* search({ params }) {\n  try {\n    const {\n      url,\n      date,\n    } = params;\n\n    const { lat, lng } = yield select((state) => state.map.latlng);\n\n    if (lat && lng) {\n      const response = yield request(`${api.police}/crimes-street/${url}?lat=${lat}&lng=${lng}&date=${date}`);\n\n      yield put(searchSuccess(response.data));\n    } else {\n      yield put(searchFailure('There is no position info! Please, click the map and tell me where you want to know'));\n    }\n  } catch(err) { \n    console.log(err);\n    yield put(searchFailure(err.message));\n  }\n}\n\nexport default function* saga() {\n  yield fork(loadAvailability);\n  yield fork(loadCrimeCategory);\n\n  yield takeLatest(LOAD_CRIME_CATEGORY_REQUEST, loadCrimeCategory);\n  yield takeLatest(SEARCH_REQUEST, search);\n}","import { takeLatest, select, put } from 'redux-saga/effects';\n\nimport {\n  SAVE_STREET_ID,\n  extractDataSuccess,\n  extractDataFailure,\n} from './actions';\n\nfunction* extractData({ id: streetId }){\n  try {\n    const crimes = yield select((state) => state.search.crimes);\n    const selectedCrimes = crimes && crimes.filter(({ location: { street: { id } = {}, } = {}, }) => id === streetId);\n\n    console.log('selectedCrimes', selectedCrimes);\n\n    const crimeTable = selectedCrimes.map(({\n      id,\n      month,\n      category,\n      location: {\n        street: {\n          name,\n        } = {},\n      } = {},\n      outcome_status,\n      outcomes: {\n        category: outcome,\n      } = outcome_status || {},\n    }) => ({ id, list: [['month', month], ['category', category], ['street', name], ['outcome status', outcome]] }));\n\n    yield put(extractDataSuccess({\n      crimeTable,\n    }));\n  } catch(err) {\n    yield put(extractDataFailure(err.message));\n  }\n}\n\nexport default function* saga(){\n  yield takeLatest(SAVE_STREET_ID, extractData);\n}","import { all, fork } from 'redux-saga/effects';\n\nimport searchSaga from './SearchPage/saga';\nimport analyseSaga from './AnalysePage/saga';\n\nexport default function* sagas () {\n  yield all([\n    searchSaga,\n    analyseSaga\n  ].map(fork));\n}","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport './index.css';\n\nimport App from './containers/App';\n\nimport reducers from './containers/reducers';\nimport sagas from './containers/sagas';\n\nimport * as serviceWorker from './serviceWorker';\n\nconst saga = createSagaMiddleware();\n\nconst store = createStore(\n  reducers,\n  composeWithDevTools(applyMiddleware(saga)),\n);\n\nsaga.run(sagas);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}